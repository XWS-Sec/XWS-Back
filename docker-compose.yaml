version: '3.1'

volumes:
  mongo-volume:
  rmq-volume:
  neo-volume:
  influx-volume:
  prometheus-volume:
  grafana-volume:
  servicecontrol-volume:

services:

  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-volume:/data/db
    ports:
      - 27017:27017 

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 7001:8081
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017/

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    volumes:
      - rmq-volume:/var/lib/rabbitmq
    ports:
      - 7002:15672
      - 5672:5672

  neo4j:
    image: neo4j
    restart: always
    volumes:
      - neo-volume:/data
    ports:
      - 7003:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=none

  influxdb:
    image: influxdb:1.8
    restart: always
    volumes:
      - influx-volume:/var/lib/influxdb
    ports:
      - 8086:8086

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - prometheus-volume:/data
      - ./prometheus:/etc/prometheus
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana-oss
    restart: always
    volumes:
      - grafana-volume:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 7004:3000
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  
  baseapi:
    build: 
      context: ./XWSBack
      dockerfile: ./baseapi.dockerfile
#    image: baseapi
    restart: always
    container_name: baseapi
    hostname: baseapi
    ports:
      - 7700:7700
    environment:
      - USE_RMQ=true
      - USER_PIC_DIR=/user-pics
      - POST_PIC_DIR=/post-pics
      - DATABUS_PATH=/DATABUS_PATH
      - USE_HTTPS=false
      - LCH=host.docker.internal
      - XWS_SENDGRID={$XWS_SENDGRID}
      - XWS_FACE_APP_ID={$XWS_FACE_APP_ID}
      - XWS_FACE_APP_SECRET={$XWS_FACE_APP_SECRET}
      - BaseApiMongoDb=mongodb://mongo:27017
      - XWS_ENABLE_TRACE=false
      - InfluxDBUri=http://influxdb:8086

  chats:
    build: 
      context: ./XWSBack
      dockerfile: ./chats.dockerfile
#    image: chats
    restart: always
    container_name: chats
    hostname: chats
    ports:
      - 7701:7701
    environment:
      - USE_RMQ=true
      - DATABUS_PATH=/DATABUS_PATH
      - USE_HTTPS=false
      - LCH=host.docker.internal
      - ChatsHandlersMongoDb=mongodb://mongo:27017
      - XWS_ENABLE_TRACE=false
      - InfluxDBUri=http://influxdb:8086

  joboffers:
    build: 
      context: ./XWSBack
      dockerfile: ./jobOffers.dockerfile
#    image: joboffers
    restart: always
    container_name: joboffers
    hostname: joboffers
    ports:
      - 7702:7702
    environment:
      - USE_RMQ=true
      - DATABUS_PATH=/DATABUS_PATH
      - USE_HTTPS=false
      - LCH=host.docker.internal
      - JobOffersHandlersMongoDb=mongodb://mongo:27017
      - XWS_ENABLE_TRACE=false
      - InfluxDBUri=http://influxdb:8086
  
  posts:
    build: 
      context: ./XWSBack
      dockerfile: ./posts.dockerfile
#    image: posts
    restart: always
    container_name: posts
    hostname: posts
    ports:
      - 7703:7703
    environment:
      - USE_RMQ=true
      - DATABUS_PATH=/DATABUS_PATH
      - USE_HTTPS=false
      - LCH=host.docker.internal
      - PostsHandlersMongoDb=mongodb://mongo:27017
      - XWS_ENABLE_TRACE=false
      - InfluxDBUri=http://influxdb:8086

  usersgraph:
    build: 
      context: ./XWSBack
      dockerfile: ./usersGraph.dockerfile
#    image: usersgraph
    restart: always
    container_name: usersGraph
    hostname: usersGraph
    ports:
      - 7704:7704
    environment:
      - USE_RMQ=true
      - DATABUS_PATH=/DATABUS_PATH
      - USE_HTTPS=false
      - LCH=host.docker.internal
      - UsersGraphHandlersMongoDb=mongodb://mongo:27017
      - XWS_ENABLE_TRACE=false
      - InfluxDBUri=http://influxdb:8086


